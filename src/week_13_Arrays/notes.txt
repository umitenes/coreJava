Topic: Arrays Intro
	   
Array:
	1. Single Diemnsional
	2. Arrays Utility
	3. For Each Loop
	4. Multi-dimensional array

Data Structure: to use the data efficiently, store data in organized manner
		
		1. Array (size is fixed, supports primitives & non-primitives)
		2. Collection (size is not fixed, ONLY supports non-primitives)
		3. Map (size is not fixed, ONLY supports non-primitives)

regular variables:
	String name = "David"; //, "Josh"
	int number = 100;

Array: Special variable that can contain multiple elements
	   Size is fixed
	   supports primitives & non-primitives

	   Declaring array:

	   		DataType[] variablename;

   		Initializing array:

   			If we do not know the exact data:
   				1. DataType[] variablename= new DataType[length]
   					int[] nums = new int[5];

			If we know the exact data:
				2. DataType[] variablename = {data1, data2, dat3 ...}

Arrays Utility: Utility class of the array, provides the methods that can be used for the arrays
			class name: Arrays
			package: java.util

		toString(array): converts array to string

default values:
	non-primitives: null
	primitives:
		byte, short, int, long ===> 0
		float, double ===> 0.0
		boolean ==> false

Tasks:
	1. create an array that has the numbers 1 to 100
	2. create an array that has the numbers 100 to 1
	3. Write a program that asks user to enter a number 10 times:
			1. store all user entered numbers in an array
			2. find the max number
			3. find the min number

	4. AverageNumber:
			1. Ask the user how many numbers they want to enter
			2. get all the inputs from the user and store them into an array
			3. Iterate the array & return the average number

	5. Items
			1. Create an array named items with the length of 5
			2. Create an array named prices with the length of 5
			3. Ask user to enter item name and price 5 times and store them into the items and prices arrays
			4. calculate the total price of the arrays
			5. display each item name and price in separate lines

						ItemName -- Price


Tasks;

1. create an array named classmates, and store 10 of your classmates' full names
            print the initials of each classmates in separate lines

2. create string array, and store the names of your  class mates (10)
            reverse each students names and print them in separate lines
            	ex:
            		arr = {java, python, c#}

        		output:
        			avaJ
        			nohtyp
        			#c

3. Given the following arrays:
        String[] items  = {"Shoes", "Jacket",  "Gloves", "AirPods", "iPad", "iPhone 12 case" };
        double[] prices = {99.99,      150.0,  9.99,     250.0 ,    439.50,  39.99};
        int[] itemIDs =   {12345 ,     12346,  12347,    12348,     12349,    12350};


        1. find out the first index number of "Gloves"

        2. find out if "iPad" is contained in the item list

        3. Print the report of each shopping item
            name - price - #ID



4. given the following arrays:
		     	String [] names = {"Anna", "Nancy", "Sarah"};
		        int [] scores = {90, 75, 80};
		        char [] grades = new char[names.length];

         1. write a program that can store the grades of the students in the array named grades
         2. print the grade report of each students in separate lines
         		Ex:
         			Anna's score is 90, and grade is A


	5.  Write a program that can reverse an array of integers and returns it as new array
        ex:
            array = {1,2,3,4,5};

        output:
            reversedArray = {5,4,3,2,1};


6. write a program that can move all the zeros to the end of the array
        Ex:
            array = {10, 0, 5, 0, 1, 0};

            output:
                 {10, 5, 1, 0, 0, 0}


7. Write a program that can print out the common elements from two integer array
          Ex:
              arr1: {1,2,3,4,5}
              arr2: {4,5,6,7,8}

          output:
              4 5